<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find gazebo_selfie_sim)/vehicles/models/selfie/selfie.xacro"/>


  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find gazebo_selfie_sim)/config/gazebo_selfie_sim.yaml" command="load"/>
  <rosparam file="$(find gazebo_selfie_sim)/vehicles/models/selfie/config/dims.yaml" command="load"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0.1 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <node pkg="joint_state_publisher" type="joint_state_publisher"  name="joint_state_publisher">
  </node>

  <!-- ros_sim_control selfie launch file -->
  <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/vehicle" args="left_rear_wheel_velocity_controller right_rear_wheel_velocity_controller
                                            left_front_wheel_velocity_controller right_front_wheel_velocity_controller
                                            left_front_steering_hinge_position_controller right_front_steering_hinge_position_controller
                                            left_rear_steering_hinge_position_controller right_rear_steering_hinge_position_controller
                                            joint_state_controller"/>
</launch>
